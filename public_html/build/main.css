body {
  padding: 0px;
  margin: 0px;
  overflow-x: hidden;
}

nav {
  background: #F9F9F9;
  box-shadow: 0px 0px 10px 5px #0003;
  position: relative;
  z-index: 5;
}

.container {
  max-width: 1100px;
  margin: auto;
  background: white;
  box-shadow: 0px 0px 10px 5px #0003;
  position: relative;
  z-index: 1;
  padding: 30px 50px 0px 50px;
  box-sizing: border-box;
}

@media only screen and (max-width: 700px) {
  .container {
    padding: 40px 10px 0px 10px;
  }
}

.nav-container {
  display: grid;
  grid-template-columns: 3fr 1fr .5fr;
  justify-items: flex-end;
  align-items: center;
  padding: 15px 30px;
  max-width: 1100px;
  margin: auto;
}

@media only screen and (max-width: 400px) {
  .nav-container {
    grid-template-columns: 2fr 1fr 1fr;
  }
}

nav .title {
  justify-self: flex-start;
  font-size: 34px;
  font-family: "Bitter", serif;
}

nav .title:hover {
  text-decoration: none;
  color: black;
}

@media only screen and (max-width: 700px) {
  nav .title {
    display: none;
  }
}

nav .title-short {
  display: none;
  justify-self: flex-start;
  font-size: 34px;
  font-family: "Bitter", serif;
}

nav .title-short:hover {
  text-decoration: none;
  color: black;
}

@media only screen and (max-width: 700px) {
  nav .title-short {
    display: block;
  }
}

nav input {
  width: 100%;
  border: none;
  border-radius: 5px;
  padding: 15px;
  background: #E9E9E9;
}

@media only screen and (max-width: 700px) {
  nav input {
    display: none;
  }
}

.fa-bars {
  color: #E9E9E9;
  font-size: 40px;
  grid-column: 3;
}

.fa-bars:hover {
  cursor: pointer;
}

.nav-container .fa-search {
  display: none;
  grid-column: 2;
  color: #E9E9E9;
  font-size: 40px;
}

.nav-container .fa-search:hover {
  cursor: pointer;
}

@media only screen and (max-width: 700px) {
  .nav-container .fa-search {
    display: block;
  }
}

#mask {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 2;
  background: #000000ad;
  opacity: 0;
  transition: opacity 0.4s ease-in-out;
}

#mask.visible {
  opacity: 1;
  pointer-events: unset;
}

#nav-menu {
  position: fixed;
  right: -350px;
  top: 0;
  width: 100%;
  background: white;
  max-width: 320px;
  text-align: center;
  height: 100%;
  z-index: 3;
  box-shadow: 0px 0px 10px 10px #00000026;
  padding: 100px 20px;
  box-sizing: border-box;
  transition: right 0.4s ease-in-out;
}

#nav-menu ul {
  list-style: none;
  padding: 0px;
}

#nav-menu ul li {
  font-family: "Raleway", serif;
  color: #a5a5a5;
  font-size: 22px;
  margin-bottom: 20px;
}

#nav-menu.visible {
  right: 0px;
}

.outer-container {
  background: url("/images/custom/hero.png") center no-repeat;
  background-size: cover;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

h1, h2, h3, h4 {
  text-align: center;
  font-family: "Bitter", serif;
  font-weight: 400;
  color: black;
}

h1 {
  margin-top: 0px;
}

h2 {
  font-size: 24px;
}

h3 {
  font-size: 20px;
  font-weight: 400;
}

a {
  color: black;
  text-decoration: none;
  transition: 0.2s;
}

a:hover {
  text-decoration: underline;
  color: #88CEF3;
}

p {
  font-family: "Raleway", serif;
  font-size: 16px;
  line-height: 21px;
  color: black;
}

p a {
  color: #88CEF3;
  text-decoration: underline;
}

.date {
  font-size: 12px;
  font-family: "Bitter", serif;
  color: #a5a5a5;
  display: inline-block;
}

.tag {
  font-family: "Bitter", serif;
  color: black;
  padding: 5px 10px;
  font-weight: 400;
  margin: 0px 5px 0px 0px;
  background: #bef3be;
  font-size: 12px;
  font-weight: 400;
  border-radius: 5px;
}

.tags {
  display: inline-flex;
  justify-content: space-evenly;
  align-items: center;
}

.view-all {
  color: #88CEF3;
  font-family: "Bitter", serif;
  font-size: 16px;
  font-weight: 400;
  padding: 10px 20px;
  border: 1px solid #88CEF3;
  border-radius: 5px;
  text-align: center;
  display: block;
  width: max-content;
  margin: 20px auto;
  transition: 0.2s ease-in;
}

.view-all:hover {
  color: white;
  background: #88CEF3;
}

.primary-cta {
  color: white;
  background: #88CEF3;
  font-family: "Bitter", serif;
  font-size: 14px;
  font-weight: 400;
  padding: 10px 20px;
  border-radius: 5px;
  text-align: center;
  display: block;
  width: max-content;
  margin: 10px auto;
  transition: 0.2s ease-in;
}

.primary-cta:hover {
  background: #9ce2ff;
  color: white;
}

.sidebar {
  background: #F9F9F9;
  padding: 20px 15px;
  border-radius: 5px;
}

.sidebar .sidebar-title {
  font-family: "Raleway", serif;
  color: #a5a5a5;
  font-size: 16px;
  text-align: center;
}

.sidebar .other-blog {
  border-bottom: 1px solid #70707033;
}

@media only screen and (max-width: 700px) {
  .sidebar {
    display: none;
  }
}

.sidebar p {
  font-size: 12px;
}

.footer {
  background: #E9E9E9;
  display: flex;
  justify-content: space-between;
  padding: 20px 50px;
  margin: 50px -50px 0px -50px;
}

.footer div {
  display: flex;
  justify-content: space-evenly;
}

.footer div a {
  margin: 0px 10px;
}

@media only screen and (max-width: 700px) {
  .footer div a {
    width: 33%;
    margin-bottom: 15px;
  }
}

.footer a, .footer .copyright {
  font-family: "Raleway", serif;
  color: #a5a5a5;
  text-decoration: none;
}

@media only screen and (max-width: 700px) {
  .footer a, .footer .copyright {
    text-align: center;
    margin-bottom: 15px;
  }
}

@media only screen and (max-width: 700px) {
  .footer {
    margin: 50px -10px 0px -10px;
    flex-direction: column;
  }
}

.about {
  background: #D9ECF6;
  margin: -40px -50px 0px -50px;
  display: flex;
  justify-content: space-between;
  padding: 50px;
  align-items: center;
}

@media only screen and (max-width: 700px) {
  .about {
    flex-direction: column;
    padding: 20px;
    margin: -40px -10px 0px -10px;
  }
}

.profile {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 45%;
}

@media only screen and (max-width: 700px) {
  .profile {
    width: 100%;
    max-width: 420px;
    margin-bottom: 20px;
  }
}

.site-info {
  width: 45%;
  font-family: "Raleway", serif;
  font-weight: 300;
}

@media only screen and (max-width: 700px) {
  .site-info {
    width: 100%;
  }
}

.profile img {
  max-height: 200px;
  max-width: 200px;
  border-radius: 100px;
}

@media only screen and (max-width: 700px) {
  .profile img {
    max-height: 150px;
    max-width: 150px;
  }
}

.profile-info h1 {
  font-size: 16px;
  font-family: "Bitter", serif;
  font-weight: 400;
  margin-bottom: 0px;
}

.profile-info h2 {
  font-size: 30px;
  font-family: "Bitter", serif;
  margin-top: 0px;
}

.featured-blogs {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 20px;
}

@media only screen and (max-width: 700px) {
  .featured-blogs {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    grid-column-gap: 0px;
    grid-row-gap: 20px;
  }
}

.featured-blogs .blog-post {
  padding: 10px;
  box-shadow: 0px 0px 10px 0px #0000001c;
}

.featured-blogs .blog-post .meta {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 0px;
}

.featured-blogs .blog-post h3 {
  margin-bottom: 0px;
}

.featured-blogs .blog-post p {
  font-family: "Raleway", serif;
  font-size: 14px;
  margin-top: 0px;
}

.blog-single-container {
  display: grid;
  grid-template-columns: 3fr 1fr;
  align-items: start;
}

@media only screen and (max-width: 700px) {
  .blog-single-container {
    grid-template-columns: 1fr;
  }
}

.blog-single {
  padding: 0px 50px 0px 0px;
}

@media only screen and (max-width: 700px) {
  .blog-single {
    padding: unset;
  }
}

.blog-single h1 {
  text-align: left;
  margin-top: 0px;
}

.blog-single .date {
  color: #a5a5a5;
  display: block;
  margin-bottom: 10px;
}

.blog_archive__single h3 {
  text-align: left;
  margin-bottom: 5px;
}

.blog_archive__single .tags {
  float: right;
}

.blog_archive__single .meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.blog_archive__single p {
  margin-top: 5px;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/